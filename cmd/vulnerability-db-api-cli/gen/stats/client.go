// Code generated by goa v3.0.6, DO NOT EDIT.
//
// stats client
//
// Command:
// $ goa gen
// github.com/adevinta/vulnerability-db-api/cmd/vulnerability-db-api-cli/design

package stats

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "stats" service client.
type Client struct {
	GetSizeStatsEndpoint        goa.Endpoint
	GetOpenIssuesStatsEndpoint  goa.Endpoint
	GetFixedIssuesStatsEndpoint goa.Endpoint
	GetIssuesStatsEndpoint      goa.Endpoint
	GetStatsMTTREndpoint        goa.Endpoint
	GetStatsExposureEndpoint    goa.Endpoint
}

// NewClient initializes a "stats" service client given the endpoints.
func NewClient(getSizeStats, getOpenIssuesStats, getFixedIssuesStats, getIssuesStats, getStatsMTTR, getStatsExposure goa.Endpoint) *Client {
	return &Client{
		GetSizeStatsEndpoint:        getSizeStats,
		GetOpenIssuesStatsEndpoint:  getOpenIssuesStats,
		GetFixedIssuesStatsEndpoint: getFixedIssuesStats,
		GetIssuesStatsEndpoint:      getIssuesStats,
		GetStatsMTTREndpoint:        getStatsMTTR,
		GetStatsExposureEndpoint:    getStatsExposure,
	}
}

// GetSizeStats calls the "Get size stats" endpoint of the "stats" service.
func (c *Client) GetSizeStats(ctx context.Context) (res *Size, err error) {
	var ires interface{}
	ires, err = c.GetSizeStatsEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*Size), nil
}

// GetOpenIssuesStats calls the "Get open issues stats" endpoint of the "stats"
// service.
func (c *Client) GetOpenIssuesStats(ctx context.Context, p *GetOpenIssuesStatsPayload) (res *Severity, err error) {
	var ires interface{}
	ires, err = c.GetOpenIssuesStatsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Severity), nil
}

// GetFixedIssuesStats calls the "Get fixed issues stats" endpoint of the
// "stats" service.
func (c *Client) GetFixedIssuesStats(ctx context.Context, p *GetFixedIssuesStatsPayload) (res *Severity, err error) {
	var ires interface{}
	ires, err = c.GetFixedIssuesStatsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Severity), nil
}

// GetIssuesStats calls the "Get issues stats" endpoint of the "stats" service.
func (c *Client) GetIssuesStats(ctx context.Context, p *GetIssuesStatsPayload) (res IssueStatsCollection, err error) {
	var ires interface{}
	ires, err = c.GetIssuesStatsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(IssueStatsCollection), nil
}

// GetStatsMTTR calls the "Get stats MTTR" endpoint of the "stats" service.
func (c *Client) GetStatsMTTR(ctx context.Context, p *GetStatsMTTRPayload) (res *Severity, err error) {
	var ires interface{}
	ires, err = c.GetStatsMTTREndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Severity), nil
}

// GetStatsExposure calls the "Get stats exposure" endpoint of the "stats"
// service.
func (c *Client) GetStatsExposure(ctx context.Context, p *GetStatsExposurePayload) (res *Exposure, err error) {
	var ires interface{}
	ires, err = c.GetStatsExposureEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Exposure), nil
}

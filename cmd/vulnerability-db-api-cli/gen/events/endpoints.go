// Code generated by goa v3.5.2, DO NOT EDIT.
//
// events endpoints
//
// Command:
// $ goa gen
// github.com/adevinta/vulnerability-db-api/cmd/vulnerability-db-api-cli/design

package events

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "events" service endpoints.
type Endpoints struct {
	ListFindingEvents goa.Endpoint
}

// NewEndpoints wraps the methods of the "events" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		ListFindingEvents: NewListFindingEventsEndpoint(s),
	}
}

// Use applies the given middleware to all the "events" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.ListFindingEvents = m(e.ListFindingEvents)
}

// NewListFindingEventsEndpoint returns an endpoint function that calls the
// method "List finding events" of service "events".
func NewListFindingEventsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*ListFindingEventsPayload)
		res, err := s.ListFindingEvents(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedEventCollection(res, "default")
		return vres, nil
	}
}

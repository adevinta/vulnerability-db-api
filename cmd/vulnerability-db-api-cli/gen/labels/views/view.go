// Code generated by goa v3.5.2, DO NOT EDIT.
//
// labels views
//
// Command:
// $ goa gen
// github.com/adevinta/vulnerability-db-api/cmd/vulnerability-db-api-cli/design

package views

import (
	goa "goa.design/goa/v3/pkg"
)

// Labels is the viewed result type that is projected based on a view.
type Labels struct {
	// Type to project
	Projected *LabelsView
	// View to render
	View string
}

// LabelsView is a type that runs validations on a projected type.
type LabelsView struct {
	// List of labels
	Labels []string
}

var (
	// LabelsMap is a map indexing the attribute names of Labels by view name.
	LabelsMap = map[string][]string{
		"default": {
			"labels",
		},
	}
)

// ValidateLabels runs the validations defined on the viewed result type Labels.
func ValidateLabels(result *Labels) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateLabelsView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []interface{}{"default"})
	}
	return
}

// ValidateLabelsView runs the validations defined on LabelsView using the
// "default" view.
func ValidateLabelsView(result *LabelsView) (err error) {

	return
}

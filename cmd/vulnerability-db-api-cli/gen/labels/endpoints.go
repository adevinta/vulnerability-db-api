// Code generated by goa v3.0.6, DO NOT EDIT.
//
// labels endpoints
//
// Command:
// $ goa gen
// github.com/adevinta/vulnerability-db-api/cmd/vulnerability-db-api-cli/design

package labels

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "labels" service endpoints.
type Endpoints struct {
	ListLabels goa.Endpoint
}

// NewEndpoints wraps the methods of the "labels" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		ListLabels: NewListLabelsEndpoint(s),
	}
}

// Use applies the given middleware to all the "labels" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.ListLabels = m(e.ListLabels)
}

// NewListLabelsEndpoint returns an endpoint function that calls the method
// "List labels" of service "labels".
func NewListLabelsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*ListLabelsPayload)
		res, err := s.ListLabels(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedLabels(res, "default")
		return vres, nil
	}
}

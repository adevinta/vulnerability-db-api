// Code generated by goa v3.5.2, DO NOT EDIT.
//
// events HTTP client types
//
// Command:
// $ goa gen
// github.com/adevinta/vulnerability-db-api/cmd/vulnerability-db-api-cli/design

package client

import (
	eventsviews "github.com/adevinta/vulnerability-db-api/cmd/vulnerability-db-api-cli/gen/events/views"
)

// ListFindingEventsResponseBody is the type of the "events" service "List
// finding events" endpoint HTTP response body.
type ListFindingEventsResponseBody []*EventResponse

// EventResponse is used to define fields on response body types.
type EventResponse struct {
	// Finding event ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Finding ID
	FindingID *string `form:"finding_id,omitempty" json:"finding_id,omitempty" xml:"finding_id,omitempty"`
	// Source ID
	SourceID *string `form:"source_id,omitempty" json:"source_id,omitempty" xml:"source_id,omitempty"`
	// Finding severity score
	Score *float32 `form:"score,omitempty" json:"score,omitempty" xml:"score,omitempty"`
	// Event time
	Time *string `form:"time,omitempty" json:"time,omitempty" xml:"time,omitempty"`
}

// NewListFindingEventsEventCollectionOK builds a "events" service "List
// finding events" endpoint result from a HTTP "OK" response.
func NewListFindingEventsEventCollectionOK(body ListFindingEventsResponseBody) eventsviews.EventCollectionView {
	v := make([]*eventsviews.EventView, len(body))
	for i, val := range body {
		v[i] = unmarshalEventResponseToEventsviewsEventView(val)
	}

	return v
}

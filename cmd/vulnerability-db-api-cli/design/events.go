/*
Copyright 2021 Adevinta
*/

package design

import (
	. "goa.design/goa/v3/dsl"
)

var FindingEventResult = ResultType("event", func() {
	Attributes(func() {
		Attribute("id", String, "Finding event ID", func() {
			Example("9cf0b778-08cc-49f9-8d57-fa0a560f7522")
		})
		Attribute("finding_id", String, "Finding ID", func() {
			Example("97db1956-b15c-4b50-ae06-fd1e7be57963")
		})
		Attribute("source_id", String, "Source ID", func() {
			Example("490eef40-b689-4bf4-bb38-c6a2d16545d1")
		})
		Attribute("score", Float32, "Finding severity score", func() {
			Example(7.0)
		})
		Attribute("time", String, "Event time", func() {
			Example("2019-06-08 11:16:40")
		})
	})
})

var _ = Service("events", func() {
	Description("Finding events endpoint.")

	Method("List finding events", func() {
		Payload(func() {
			Field(1, "minScore", Int, "Minimum issues score filter")
			Field(2, "maxScore", Int, "Maximum issues score filter")
			Field(3, "minDate", String, "Minimum date filter (YYY-MM-DD)")
			Field(4, "maxDate", String, "Maximum date filter (YYY-MM-DD)")
			Field(5, "page", Int, "Number of page requested")
			Field(6, "size", Int, "Number of results per page")
		})

		Result(CollectionOf(FindingEventResult))

		HTTP(func() {
			GET("/events")

			Param("minScore")
			Param("maxScore")
			Param("minDate")
			Param("maxDate")
			Param("page")
			Param("size")

			Response(StatusOK)
		})
	})

})

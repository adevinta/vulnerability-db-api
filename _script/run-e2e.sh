#!/bin/bash

# Copyright 2022 Adevinta

set -u -e

cd "$(dirname $0)/.."

case $# in
1)
	ARG=$1
    ;;
*)
	echo "usage: $0 <read|master>" >&2
	exit 2
	;;
esac

COMPOSE_OPTIONS=""
case $ARG in
"read")
	CONFIG_FILE="_resources/config/e2e-read-replica.toml"
	SERVICE="postgresql-e2e-slave"
    echo "using the read replica database"
    ;;
"master")
	CONFIG_FILE="_resources/config/e2e-master.toml"
	SERVICE="postgresql-e2e-master"
    echo "using the master database"
    ;;
*)
	echo "usage: $0 <read|master>" >&2
	exit 2
	;;
esac


# Start postgress databases.
docker-compose -f _resources/docker-compose-e2e.yml  -p "e2e" up -d $SERVICE

# Set up schema for the test db.
set +e
rm -rf /tmp/vulnerability-db
set -e
git clone --single-branch --branch master https://github.com/adevinta/vulnerability-db.git /tmp/vulnerability-db
docker run --net=host -v /tmp/vulnerability-db/db:/flyway/sql flyway/flyway:"${FLYWAY_VERSION:-8}-alpine" \
    -user=vulndb -password=vulndb -url=jdbc:postgresql://127.0.0.1:5434/vulndbtest -baselineOnMigrate=true migrate

# Loaf fixtures in the test db.
TestDBPort=5434 go run e2e/fixtures.go _resources/e2e/fixtures/

# Give time to the fixtures data to be replicated to the read replica.
sleep 5

# Kill any possible running server.
set +e
pkill vulnerability-db-api
set -e

echo "RUNNING vulnerability-db-api"
go install ./...
vulnerability-db-api -c $CONFIG_FILE &

# Run e2e tests.
echo "RUNNING e2e tests"
docker-compose -f _resources/docker-compose-e2e.yml -p "e2e" run e2e

# Clean up resurces.
set +e
pkill vulnerability-db-api
set -e
docker-compose -f _resources/docker-compose-e2e.yml  -p "e2e" rm -s -f -v


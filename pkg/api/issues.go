/*
Copyright 2021 Adevinta
*/

package api

import (
	"net/http"

	"github.com/labstack/echo"
)

// ListIssues returns a paginated JSON containing issues.
func (api *API) ListIssues(c echo.Context) error {
	filter, err := api.parseFilter(c)
	if err != nil {
		return echo.NewHTTPError(http.StatusBadRequest, err.Error())
	}

	issues, pagination, err := api.storage.ListIssues(filter)
	if err != nil {
		return err
	}

	return response(c, issues, "issues", pagination)
}

// IssuesSummary returns a summary of affected assets by issue.
func (api *API) IssuesSummary(c echo.Context) error {
	filter, err := api.parseFilter(c)
	if err != nil {
		return echo.NewHTTPError(http.StatusBadRequest, err.Error())
	}

	issues, pagination, err := api.storage.IssuesSummary(filter)
	if err != nil {
		return err
	}

	return response(c, issues, "issues", pagination)
}

// GetIssue returns a JSON containing a specific issue.
func (api *API) GetIssue(c echo.Context) error {
	id := c.Param("id")

	issue, err := api.storage.GetIssue(id)
	if err != nil {
		return err
	}

	if issue.ID == "" {
		return echo.NewHTTPError(http.StatusNotFound)
	}

	return response(c, issue, "issue")
}

// GetIssueMTTR returns a JSON containing the mean time to remediate an issue.
func (api *API) GetIssueMTTR(c echo.Context) error {
	id := c.Param("id")

	mttr, err := api.storage.GetIssueMTTR(id)
	if err != nil {
		return err
	}

	if mttr == 0 {
		return echo.NewHTTPError(http.StatusNotFound)
	}

	return response(c, mttr, "mttr")
}

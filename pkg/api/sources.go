package api

import (
	"net/http"

	"github.com/labstack/echo"
)

// ListSources returns a paginated JSON containing sources.
func (api *API) ListSources(c echo.Context) error {
	filter, err := api.parseFilter(c)
	if err != nil {
		return echo.NewHTTPError(http.StatusBadRequest, err.Error())
	}

	sources, pagination, err := api.storage.ListSources(filter)
	if err != nil {
		return err
	}

	return response(c, sources, "sources", pagination)
}

// GetSource returns a JSON containing a specific source.
func (api *API) GetSource(c echo.Context) error {
	id := c.Param("id")

	source, err := api.storage.GetSource(id)
	if err != nil {
		return err
	}

	if source.ID == "" {
		return echo.NewHTTPError(http.StatusNotFound)
	}

	return response(c, source, "source")
}

// GetSourceMTTR returns the mean time to remediation for a specific source.
func (api *API) GetSourceMTTR(c echo.Context) error {
	id := c.Param("id")

	mttr, err := api.storage.GetSourceMTTR(id)
	if err != nil {
		return err
	}

	if mttr == 0 {
		return echo.NewHTTPError(http.StatusNotFound)
	}

	return response(c, mttr, "mttr")
}
